//....МОДУЛЬ 6

/*....Задание 1.
На этот раз оформите решение в виде функции,
постарайтесь дать этой функции корректное название,
вызовите функцию, проанализируйте синтаксис...*/ 

function getResult(){
    console.log(35/5+44)
  };
  getResult();
  
  /*....Задание 2.
  Написать функцию, которая принимает на входе любое 
  число (но не больше 1 000), определяет, является ли 
  оно простым, и выводит простое число или нет. Если 
  введено больше 1 000, то выводится сообщение, что 
  данные неверны. Обратите внимание на числа 0 и 1.
  Здесь вам пригодятся знания из предыдущего модуля — 
  циклы и условные операторы.....*/
  
  function checkNum(num) {
    if (num < 1000) {
      return true;
    } else if(num === 0){
      console.log('andefained')
    } else {
      return confirm('неверные данные');
    }
  }
  let num = prompt('введите число', 505);
  
  if ( checkNum(num) ) {
    alert( 'число простое' );
  } else {
    alert( 'число сложное' );
  }
  
  
  /*....Задание 3.
  Написать функцию, которая принимает число как аргумент и
  возвращает функцию, которая также принимает число как аргумент 
  и возвращает сумму этих двух чисел. Выведите в консоль результат.....*/
  
  
  function sum(a, b) {
    return a + b;
  }
  let result = sum(78, 98);
  console.log( result );
  
  
  /*.......Задание 4.
  Напишите функцию, которая принимает два числа. Каждую секунду
  необходимо выводить в консоль, начиная от первого и заканчивая
  вторым. Используйте setInterval. Например, пользователь ввёл
  числа 5 и 15. Каждую секунду в консоль должно печататься число,
  начиная с 5 и заканчивая 15 (всего 11 чисел: 5 6 7 8 9 10 11 12 13 14 15)....*/
  
  function showNumber(num){
    console.log(num);
    if (num < 15){
       setTimeout(showNumber,3000,++num);
    }
  }
  setTimeout(showNumber,3000,5);
  
  /*....Задание 5.
  Напишите функцию, которая принимает два натуральных числа x и n и 
  возвращает x в степени n. Иначе говоря, умножает x на себя n раз и 
  возвращает результат. Используйте Arrow Function синтаксис.
  Протестируйте функцию на любых значениях и выведите результат в консоль....*/
  
  
  const fatArrowFunction = (x, n) => {
    console.log( x ** n )
  }
  fatArrowFunction(2,5)
  
